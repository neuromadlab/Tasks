% Computes a jittered ITI drawn from a exponential distribution and truncated at a maximum value
% See Ashby (2011) for a discussion of the advantages.

function DelayJitter = ComputeJitter_exp(mu_jitter, max_delay, n_trials)

%sets the tolerance for local deviations of the sampled distribution from the intended mu
dev_tol = 0.01; mu_jitter = 2; max_delay = 4; n_trials = 48;

while 1
    %samples n_trials times from the exponential distribution
    DelayJitter = exprnd(mu_jitter,n_trials,1);
    %truncates extreme values
    DelayJitter(DelayJitter > max_delay) = max_delay;
    %uses a criterion to break the loop when the sampled mu resembles the
    %intended mu
    if abs(mean(DelayJitter)-mu_jitter) < mu_jitter * dev_tol
        break
    end
end

save(sprintf('DelayJitter_mu_%d_max_%d_trials_%d.mat', mu_jitter, max_delay, n_trials));

histogram(DelayJitter,'Normalization','pdf');

disp(['Sampled Mu = ' num2str(mean(DelayJitter))]);
